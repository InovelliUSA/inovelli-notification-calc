{"version":3,"sources":["ThemeProvider.js","AboutDialog.js","Effects.js","LED.js","NotificationLED.js","Scenes.js","Switch.js","ValueLabelTooltip.js","DecoderDialog.js","ClipboardAccess.js","NotificationCalc.js","SceneRow.js","SceneTable.js","StandardLEDTools.js","Options.js","App.js","serviceWorker.js","swconfig.js","index.js","Inovelli-LZW30-SN.gif"],"names":["ThemeProvider","props","state","themeType","window","localStorage","formatType","setFormat","format","setState","setItem","setTheme","theme","THEME","createMuiTheme","palette","type","this","primary","main","MuiThemeProvider","children","React","Component","AboutDialog","Dialog","open","onClose","DialogTitle","DialogContent","Typography","variant","gutterBottom","List","dense","ListItem","ListItemText","secondary","IconButton","component","href","DialogActions","Button","onClick","DIMMER_EFFECTS","ONOFF_EFFECTS","LED","effectCSS","effectStyles","level","effect","classes","fastBlink","slowBlink","strobe","chase","backgroundImage","color","backgroundColor","boxShadow","zIndex","height","forever","className","notificationLED","style","overflow","position","id","withStyles","background","opacity","bottom","width","animationIterationCount","animationDuration","animationName","animationTimingFunction","NotificationLED","root","display","flexDirection","buttons","taps","direction","data","Switch","handleConfigClick","scene","findScene","onSceneTriggered","triggerScene","tapCounter","e","clearTimeout","timeout","lastState","setTimeout","Scenes","find","s","toString","alt","src","lzw30sn","top","right","cursor","left","defaultProps","durationFormater","val","Math","floor","ValueLabelTooltip","value","popperRef","useRef","useEffect","current","update","Tooltip","PopperProps","enterTouchDelay","placement","title","DecoderDialog","handleChange","target","handleDecode","onDecode","parseInt","Number","prevProps","maxval","switchType","DialogContentText","TextField","fullWidth","autoFocus","onChange","label","PureComponent","copyTextToClipboard","text","callback","navigator","clipboard","writeText","then","err","SlideTransition","Slide","longToByteArray","long","byteArray","index","length","byte","NotificationCalc","handleCopyNumber","anchor","copyToClipboard","handleOnCopy","handleCopyYAML","YAML","stringify","parameter","setValue","key","v","openDecoder","decoderDialogOpen","handleDecoderDialogClose","arr","duration","toggleMenu","success","snackbarOpen","copyStatusText","handleSnackbarClose","configValue","createRef","textAlign","colorHelper","Slider","defaultValue","aria-labelledby","valueLabelDisplay","step","min","max","Grid","container","spacing","item","xs","valueLabelFormat","marks","ValueLabelComponent","FormControl","margin","InputLabel","Select","MenuItem","marginTop","readOnly","inputRef","InputProps","endAdornment","InputAdornment","edge","SvgIcon","viewBox","d","Menu","Boolean","anchorEl","Snackbar","anchorOrigin","vertical","horizontal","TransitionComponent","autoHideDuration","message","switchPicker","marginBottom","SceneRow","copyToYAML","scene_data","row","scene_id","onCopy","undefined","boxRef","isHighlighted","scrollIntoView","behavior","block","inline","isDisabled","TableRow","ref","highlighted","disabled","TableCell","scope","align","size","action","contrastText","SceneTable","maxHeight","Table","stickyHeader","TableHead","TableBody","map","Object","values","highlight","join","indexOf","maxWidth","StandardLEDTools","toggleMenuColor","anchorColor","brightness","handleCopyNumberColor","handleCopyYAMLColor","configValueColor","configValueBrightness","OptionsDialog","handleThemeChange","handleFormatChange","LED_COLORS","require","colors","steps","model","toArray","App","param","setSwitchType","openAboutDialog","aboutDialogOpen","closeAboutDialog","tabChange","tab","onSceneTrigger","openOptions","optionsDialogOpen","closeOptions","standardColor","standardBrightness","CssBaseline","AppBar","Toolbar","flexGrow","flexShrink","switchWrapper","optionsContainer","Tabs","indicatorColor","centered","Tab","Options","flexWrap","justifyContent","alignItems","paddingTop","minWidth","switchContainer","credits","padding","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","unregister","reload","info","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","checkValidServiceWorker","swConfig","module","exports"],"mappings":"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","file":"static/js/main.10c8ab41.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst primary = \"#c21414\";\r\n\r\nclass ThemeProvider extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      themeType: window.localStorage.themeType || \"light\",\r\n      formatType: window.localStorage.formatType || \"10\",\r\n      setFormat: format => {\r\n        this.setState({ formatType: format });\r\n        window.localStorage.setItem(\"formatType\", format);\r\n      },\r\n      setTheme: theme => {\r\n        if (theme === \"light\" || theme === \"dark\") {\r\n          this.setState({ themeType: theme });\r\n          window.localStorage.setItem(\"themeType\", theme);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const THEME = createMuiTheme({\r\n      palette: {\r\n        type: this.state.themeType,\r\n        primary: { main: primary }\r\n      }\r\n    });\r\n    return (\r\n      <MuiThemeProvider theme={THEME}>\r\n        {this.props.children(this.state)}\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ThemeProvider;\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  IconButton\r\n} from \"@material-ui/core\";\r\nimport Twitter from \"@material-ui/icons/Twitter\";\r\nimport GitHub from \"@material-ui/icons/GitHub\";\r\nimport LinkedIn from \"@material-ui/icons/LinkedIn\";\r\n\r\nclass AboutDialog extends React.Component {\r\n  render() {\r\n    return (\r\n      <Dialog open={this.props.open} onClose={this.props.onClose}>\r\n        <DialogTitle>About</DialogTitle>\r\n        <DialogContent>\r\n          <Typography variant=\"h6\">About the Tool</Typography>\r\n          <Typography variant=\"caption\" gutterBottom={true}>\r\n            This is a simple application to assist in calculating the\r\n            configuration values to send to your Inovelli v2 ZWave Light\r\n            switches. The values calculated by this tool can be used by any\r\n            compatible ZWave controller. See your controller documentation for\r\n            information on where to use the values produced by this tool.\r\n            <br />\r\n            <br />\r\n          </Typography>\r\n          <Typography variant=\"h6\">Compatible Switches</Typography>\r\n          <List dense={true}>\r\n            <ListItem>\r\n              <ListItemText\r\n                primary=\"Inovelli LZW30-SN-1\"\r\n                secondary=\"On/Off Switch + Scenes\"\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText\r\n                primary=\"Inovelli  LZW31-SN-1\"\r\n                secondary=\"Dimmer Switch + Scenes\"\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText\r\n                primary=\"Inovelli LZW30\"\r\n                secondary=\"On/Off Switch (No Scenes or Notifications)\"\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText\r\n                primary=\"Inovelli  LZW31\"\r\n                secondary=\"Dimmer Switch (No Scenes or Notifications)\"\r\n              />\r\n            </ListItem>\r\n          </List>\r\n          <Typography variant=\"h6\">Credits</Typography>\r\n          <Typography>Written By @nathanfiscus</Typography>\r\n          <IconButton\r\n            component=\"a\"\r\n            href=\"https://www.github.com/nathanfiscus/inovelli-notification-calc\"\r\n          >\r\n            <GitHub />\r\n          </IconButton>\r\n          <IconButton component=\"a\" href=\"https://www.twitter.com/nathanfiscus\">\r\n            <Twitter />\r\n          </IconButton>\r\n          <IconButton\r\n            component=\"a\"\r\n            href=\"https://www.linkedin.com/in/nathanfiscus\"\r\n          >\r\n            <LinkedIn />\r\n          </IconButton>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.props.onClose}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutDialog;\r\n","export const DIMMER_EFFECTS = {\r\n  SOLID: \"1\",\r\n  CHASE: \"2\",\r\n  FAST_BLINK: \"3\",\r\n  SLOW_BLINK: \"4\",\r\n  PULSE: \"5\"\r\n};\r\n\r\nexport const ONOFF_EFFECTS = {\r\n  SOLID: \"1\",\r\n  FAST_BLINK: \"2\",\r\n  SLOW_BLINK: \"3\",\r\n  PULSE: \"4\"\r\n};\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport { DIMMER_EFFECTS, ONOFF_EFFECTS } from \"./Effects\";\r\n\r\nconst styles = theme => ({\r\n  \"@global\": {\r\n    \"@keyframes pulse\": {\r\n      \"50%\": {\r\n        background: \"#CCCCCC\",\r\n        boxShadow: \"0px 0px 0px 0px\"\r\n      }\r\n    },\r\n    \"@keyframes blink\": {\r\n      \"50%\": { opacity: \"0.0\" }\r\n    },\r\n    \"@keyframes chase\": {\r\n      \"0%\": { bottom: \"-60%\" },\r\n      \"50%\": { bottom: \"30%\" },\r\n      \"100%\": { bottom: \"-60%\" }\r\n    }\r\n  },\r\n  notificationLED: {\r\n    width: \"7px\",\r\n    height: \"39px\",\r\n    backgroundColor: \"#CCCCCC\"\r\n  },\r\n  forever: {\r\n    animationIterationCount: \"infinite\"\r\n  },\r\n  strobe: {\r\n    animationDuration: \"3.5s\",\r\n    animationName: \"pulse\"\r\n    //animationTimingFunction: \"linear\"\r\n  },\r\n  fastBlink: {\r\n    animationDuration: \"0.80s\",\r\n    animationName: \"blink\",\r\n    animationTimingFunction: \"step-start\"\r\n  },\r\n  slowBlink: {\r\n    animationDuration: \"2s\",\r\n    animationName: \"blink\",\r\n    animationTimingFunction: \"step-start\"\r\n  },\r\n  chase: {\r\n    animationDuration: \"2s\",\r\n    animationName: \"chase\",\r\n    position: \"absolute\",\r\n    animationTimingFunction: \"linear\"\r\n  }\r\n});\r\n\r\nclass LED extends React.Component {\r\n  render() {\r\n    let effectCSS = \"\";\r\n    let effectStyles = {};\r\n    effectStyles[\"opacity\"] = this.props.level / 10;\r\n    switch (this.props.effect) {\r\n      case this.props.type === \"dimmer\"\r\n        ? DIMMER_EFFECTS.FAST_BLINK\r\n        : ONOFF_EFFECTS.FAST_BLINK:\r\n        effectCSS += ` ${this.props.classes.fastBlink}`;\r\n        break;\r\n      case this.props.type === \"dimmer\"\r\n        ? DIMMER_EFFECTS.SLOW_BLINK\r\n        : ONOFF_EFFECTS.SLOW_BLINK:\r\n        effectCSS += ` ${this.props.classes.slowBlink}`;\r\n        break;\r\n      case this.props.type === \"dimmer\"\r\n        ? DIMMER_EFFECTS.PULSE\r\n        : ONOFF_EFFECTS.PULSE:\r\n        effectCSS += ` ${this.props.classes.strobe}`;\r\n        break;\r\n      case this.props.type === \"dimmer\" ? DIMMER_EFFECTS.CHASE : \"\":\r\n        effectCSS += ` ${this.props.classes.chase}`;\r\n        effectStyles.backgroundImage = `linear-gradient(transparent,${this.props.color},transparent)`;\r\n        effectStyles.backgroundColor = \"unset\";\r\n        effectStyles.boxShadow = \"unset\";\r\n        effectStyles.zIndex = 0;\r\n        effectStyles.height = \"300px\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    effectCSS += ` ${this.props.classes.forever}`;\r\n\r\n    return (\r\n      <div\r\n        className={this.props.classes.notificationLED}\r\n        style={{\r\n          ...this.props.style,\r\n          overflow: \"hidden\",\r\n          position: \"relative\"\r\n        }}\r\n      >\r\n        <span\r\n          id=\"notification-led\"\r\n          className={this.props.classes.notificationLED + effectCSS}\r\n          style={{\r\n            backgroundColor: this.props.color,\r\n            color: this.props.color,\r\n            position: \"absolute\",\r\n            zIndex: \"2\",\r\n            boxShadow: \"0px 0px 5px 0px\",\r\n            ...this.props.style,\r\n            ...effectStyles\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(LED);\r\n","import React from \"react\";\r\nimport LED from \"./LED\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  }\r\n});\r\n\r\nclass NotificationLED extends React.Component {\r\n  render() {\r\n    const { type, color, effect, level } = this.props;\r\n    return (\r\n      <div style={this.props.style}>\r\n        <LED\r\n          color={color}\r\n          effect={effect}\r\n          level={level}\r\n          type={type}\r\n          style={type === \"dimmer\" ? { height: \"210px\" } : {}}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(NotificationLED);\r\n","export default [\r\n  { buttons: \"1 x Up\", taps: \"1\", direction: \"up\", id: \"2\", data: \"7680\" },\r\n  { buttons: \"1 x Down\", taps: \"1\", direction: \"down\", id: \"1\", data: \"7680\" },\r\n  { buttons: \"2 x Up\", taps: \"2\", direction: \"up\", id: \"2\", data: \"7860\" },\r\n  { buttons: \"2 x Down\", taps: \"2\", direction: \"down\", id: \"1\", data: \"7860\" },\r\n  { buttons: \"3 x Up\", taps: \"3\", direction: \"up\", id: \"2\", data: \"7920\" },\r\n  { buttons: \"3 x Down\", taps: \"3\", direction: \"down\", id: \"1\", data: \"7920\" },\r\n  { buttons: \"4 x Up\", taps: \"4\", direction: \"up\", id: \"2\", data: \"7980\" },\r\n  { buttons: \"4 x Down\", taps: \"4\", direction: \"down\", id: \"1\", data: \"7980\" },\r\n  { buttons: \"5 x Up\", taps: \"5\", direction: \"up\", id: \"2\", data: \"8040\" },\r\n  { buttons: \"5 x Down\", taps: \"5\", direction: \"down\", id: \"1\", data: \"8040\" },\r\n  {\r\n    buttons: \"1 x Config\",\r\n    taps: \"1\",\r\n    direction: \"config\",\r\n    id: \"3\",\r\n    data: \"7680\"\r\n  },\r\n  { buttons: \"Hold Up\", taps: \"0\", direction: \"up\", id: \"2\", data: \"7800\" },\r\n  { buttons: \"Release Up\", taps: \"-1\", direction: \"up\", id: \"2\", data: \"7740\" },\r\n  { buttons: \"Hold Down\", taps: \"0\", direction: \"down\", id: \"1\", data: \"7800\" },\r\n  {\r\n    buttons: \"Release Down\",\r\n    taps: \"-1\",\r\n    direction: \"down\",\r\n    id: \"1\",\r\n    data: \"7740\"\r\n  }\r\n];\r\n","import React from \"react\";\r\nimport lzw30sn from \"./Inovelli-LZW30-SN.gif\";\r\nimport NotificationLED from \"./NotificationLED\";\r\nimport Scenes from \"./Scenes\";\r\n\r\nclass Switch extends React.Component {\r\n  static propTypes = {};\r\n\r\n  static defaultProps = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      taps: 0,\r\n      direction: \"\"\r\n    };\r\n    this.timeout = null;\r\n  }\r\n\r\n  findScene(taps, direction) {\r\n    return Scenes.find(\r\n      s => s.taps === taps.toString() && s.direction === direction\r\n    );\r\n  }\r\n\r\n  handleConfigClick = () => {\r\n    const scene = this.findScene(1, \"config\");\r\n    this.props.onSceneTriggered(scene);\r\n  };\r\n\r\n  triggerScene = () => {\r\n    const scene = this.findScene(this.state.taps, this.state.direction);\r\n    this.setState({ taps: 0, direction: \"null\" });\r\n    this.props.onSceneTriggered(scene);\r\n  };\r\n\r\n  tapCounter = direction => e => {\r\n    clearTimeout(this.timeout);\r\n    this.setState(\r\n      lastState => {\r\n        if (direction !== lastState.direction) {\r\n          return {\r\n            taps: 1,\r\n            direction\r\n          };\r\n        } else {\r\n          return {\r\n            taps: lastState.taps + 1,\r\n            direction\r\n          };\r\n        }\r\n      },\r\n      () => {\r\n        this.timeout = setTimeout(this.triggerScene, 500);\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ position: \"relative\" }}>\r\n        <img alt=\"Inovelli-LZW30-SN\" src={lzw30sn} />\r\n        <span\r\n          id=\"auxButton\"\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"162px\",\r\n            right: \"129px\",\r\n            width: \"10px\",\r\n            height: \"57px\",\r\n            cursor: \"pointer\"\r\n          }}\r\n          onClick={this.handleConfigClick}\r\n        />\r\n        <span\r\n          id=\"up-paddle\"\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"162px\",\r\n            left: \"135px\",\r\n            width: \"120px\",\r\n            height: \"100px\",\r\n            cursor: \"pointer\"\r\n          }}\r\n          onClick={this.tapCounter(\"up\")}\r\n        />\r\n        <span\r\n          id=\"down-paddle\"\r\n          style={{\r\n            position: \"absolute\",\r\n            bottom: \"162px\",\r\n            left: \"135px\",\r\n            width: \"120px\",\r\n            height: \"100px\",\r\n            cursor: \"pointer\"\r\n          }}\r\n          onClick={this.tapCounter(\"down\")}\r\n        />\r\n        <NotificationLED\r\n          style={{\r\n            bottom: \"162px\",\r\n            right: \"129px\",\r\n            position: \"absolute\"\r\n          }}\r\n          type={this.props.type}\r\n          color={this.props.color}\r\n          effect={this.props.effect}\r\n          level={this.props.level}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Switch;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\n\r\nconst durationFormater = val => {\r\n  switch (val) {\r\n    case 255:\r\n      return \"Forever\";\r\n    case 1:\r\n      return \"1 second\";\r\n    default:\r\n      if (val > 59) {\r\n        return `${Math.floor(val / 60)} minutes ${val % 60} seconds`;\r\n      } else {\r\n        return `${val} seconds`;\r\n      }\r\n  }\r\n};\r\n\r\nfunction ValueLabelTooltip(props) {\r\n  const { children, open, value } = props;\r\n\r\n  const popperRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    if (popperRef.current) {\r\n      popperRef.current.update();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Tooltip\r\n      PopperProps={{\r\n        popperRef\r\n      }}\r\n      open={open}\r\n      enterTouchDelay={0}\r\n      placement=\"top\"\r\n      title={durationFormater(value)}\r\n    >\r\n      {children}\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nValueLabelTooltip.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  value: PropTypes.number.isRequired\r\n};\r\n\r\nexport default ValueLabelTooltip;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  TextField,\r\n  DialogActions,\r\n  Button\r\n} from \"@material-ui/core\";\r\n\r\nclass DecoderDialog extends React.PureComponent {\r\n  static propTypes = {\r\n    open: PropTypes.bool,\r\n    onClose: PropTypes.func,\r\n    switchType: PropTypes.string,\r\n    onDecode: PropTypes.func\r\n  };\r\n\r\n  static defaultProps = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: \"\"\r\n    };\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ value: e.target.value });\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.open !== prevProps.open) {\r\n      this.setState({ value: \"\" });\r\n    }\r\n  }\r\n\r\n  handleDecode = () => {\r\n    this.props.onDecode(parseInt(this.state.value, Number(this.props.format)));\r\n  };\r\n\r\n  render() {\r\n    const maxval = this.props.switchType === \"dimmer\" ? 100600575 : 83823359;\r\n    return (\r\n      <Dialog open={this.props.open} onClose={this.props.onClose}>\r\n        <DialogTitle>Decode A Calculated Value</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Enter a notification value below. This will decode the configuration\r\n            value into the individual parameters and set options to the\r\n            calculated parameters.\r\n          </DialogContentText>\r\n          <TextField\r\n            fullWidth={true}\r\n            autoFocus={true}\r\n            onChange={this.handleChange}\r\n            value={this.state.value}\r\n            label={`Enter a value between 1 and ${maxval.toString(\r\n              Number(this.props.format)\r\n            )}`}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.props.onClose}>Cancel</Button>\r\n          <Button onClick={this.handleDecode}>Decode</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DecoderDialog;\r\n","import * as clipboard from \"clipboard-polyfill/dist/clipboard-polyfill.promise\";\r\n\r\nexport function fallbackCopyTextToClipboard(text, callback) {\r\n  var textArea = document.createElement(\"textarea\");\r\n  textArea.value = text;\r\n  textArea.style.position = \"fixed\"; //avoid scrolling to bottom\r\n  textArea.contentEditable = true;\r\n  textArea.readOnly = false;\r\n  document.body.appendChild(textArea);\r\n  textArea.focus();\r\n  textArea.select();\r\n\r\n  try {\r\n    var successful = document.execCommand(\"copy\");\r\n    callback(successful, { message: \"unable to execute copy command\" });\r\n  } catch (err) {\r\n    callback(false, err);\r\n  }\r\n\r\n  document.body.removeChild(textArea);\r\n}\r\n\r\nexport default function copyTextToClipboard(text, callback = () => {}) {\r\n  if (!navigator.clipboard) {\r\n    clipboard.writeText(text).then(\r\n      function() {\r\n        callback(true);\r\n      },\r\n      function(err) {\r\n        callback(false, err);\r\n      }\r\n    );\r\n    return;\r\n  }\r\n  navigator.clipboard.writeText(text).then(\r\n    function() {\r\n      callback(true);\r\n    },\r\n    function(err) {\r\n      callback(false, err);\r\n    }\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  withStyles,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Slider,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n  SvgIcon,\r\n  Grid,\r\n  Tooltip,\r\n  Menu,\r\n  Snackbar\r\n} from \"@material-ui/core\";\r\nimport Brightness0 from \"@material-ui/icons/Brightness2\";\r\nimport Brightness7 from \"@material-ui/icons/Brightness7\";\r\nimport InfiniteIcon from \"@material-ui/icons/AllInclusive\";\r\nimport TimelapseIcon from \"@material-ui/icons/Timelapse\";\r\nimport { DIMMER_EFFECTS, ONOFF_EFFECTS } from \"./Effects\";\r\nimport ValueLabelTooltip from \"./ValueLabelTooltip\";\r\nimport SettingsBackupRestoreIcon from \"@material-ui/icons/SettingsBackupRestore\";\r\nimport DecoderDialog from \"./DecoderDialog\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport copyToClipboard from \"./ClipboardAccess\";\r\nimport YAML from \"json-to-pretty-yaml\";\r\n\r\nfunction SlideTransition(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst styles = theme => ({\r\n  colorHelper: {\r\n    height: \"10px\",\r\n    width: \"100%\",\r\n    background:\r\n      \"linear-gradient(to right, rgb(255,0,0), rgb(255,125,0), rgb(255,255,0), rgb(125,255,0), rgb(0,255,0), rgb(0,255,125), rgb(0,255,255), rgb(0,125,255), rgb(0,0,255), rgb(125,0,255), rgb(255,0,255), rgb(255,0,125), rgb(255,0,0))\"\r\n  },\r\n  switchPicker: {\r\n    marginBottom: theme.spacing(3)\r\n  }\r\n});\r\n\r\nconst longToByteArray = function(/*long*/ long) {\r\n  // we want to represent the input as a 8-bytes array\r\n  var byteArray = [0, 0, 0, 0];\r\n\r\n  for (var index = 0; index < byteArray.length; index++) {\r\n    var byte = long & 0xff;\r\n    byteArray[index] = byte;\r\n    long = (long - byte) / 256;\r\n  }\r\n\r\n  return byteArray;\r\n};\r\n\r\n// const byteArrayToLong = function(/*byte[]*/ byteArray) {\r\n//   var value = 0;\r\n//   for (var i = byteArray.length - 1; i >= 0; i--) {\r\n//     value = value * 256 + byteArray[i];\r\n//   }\r\n\r\n//   return value;\r\n// };\r\n\r\nclass NotificationCalc extends React.Component {\r\n  static propTypes = {\r\n    color: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    level: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    duration: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    effect: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    onChange: PropTypes.func,\r\n    type: PropTypes.string\r\n  };\r\n\r\n  static defaultProps = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      decoderDialogOpen: false,\r\n      anchor: null,\r\n      snackbarOpen: false,\r\n      copyStatusText: \"\"\r\n    };\r\n    this.configValue = React.createRef();\r\n  }\r\n\r\n  handleCopyNumber = () => {\r\n    this.setState({ anchor: null });\r\n    copyToClipboard(\r\n      this.props.value.toString(Number(this.props.format)),\r\n      this.handleOnCopy\r\n    );\r\n  };\r\n\r\n  handleCopyYAML = () => {\r\n    this.setState({ anchor: null });\r\n    copyToClipboard(\r\n      YAML.stringify({\r\n        parameter: this.props.type === \"dimmer\" ? 16 : 8,\r\n        value:\r\n          this.props.format === \"10\"\r\n            ? parseInt(this.props.value.toString(Number(this.props.format)))\r\n            : this.props.value.toString(Number(this.props.format))\r\n      }),\r\n      this.handleOnCopy\r\n    );\r\n  };\r\n\r\n  durationFormater = val => {\r\n    switch (val) {\r\n      case 255:\r\n        return \"Forever\";\r\n      case 1:\r\n        return \"1 second\";\r\n      default:\r\n        if (val > 59) {\r\n          return `${Math.floor(val / 60)}${val % 60} seconds`;\r\n        } else {\r\n          return `${val} seconds`;\r\n        }\r\n    }\r\n  };\r\n\r\n  setValue = key => (e, v) => {\r\n    this.props.onChange(\r\n      key,\r\n      key !== \"effect\" && key !== \"type\" ? v : e.target.value\r\n    );\r\n  };\r\n\r\n  openDecoder = () => {\r\n    this.setState({ decoderDialogOpen: true });\r\n  };\r\n\r\n  handleDecoderDialogClose = () => {\r\n    this.setState({ decoderDialogOpen: false });\r\n  };\r\n\r\n  handleDecode = value => {\r\n    const arr = longToByteArray(value);\r\n    this.props.onChange(\"all\", {\r\n      color: arr[0],\r\n      level: arr[1],\r\n      duration: arr[2],\r\n      effect: arr[3].toString(),\r\n      value: value\r\n    });\r\n    this.setState({ decoderDialogOpen: false });\r\n  };\r\n\r\n  toggleMenu = e => {\r\n    const { target } = e;\r\n    this.setState(lastState => ({ anchor: lastState.anchor ? null : target }));\r\n  };\r\n\r\n  handleOnCopy = success => {\r\n    this.setState({\r\n      snackbarOpen: true,\r\n      copyStatusText: success\r\n        ? \"Copied to Clipboard\"\r\n        : \"Unable to copy to clipboard. Check browser settings.\"\r\n    });\r\n  };\r\n\r\n  handleSnackbarClose = () => {\r\n    this.setState({ snackbarOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={{ textAlign: \"right\" }}>\r\n          <Tooltip title=\"Decode a Value\">\r\n            <IconButton onClick={this.openDecoder}>\r\n              <SettingsBackupRestoreIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </div>\r\n        <Typography gutterBottom>Color</Typography>\r\n        <div className={this.props.classes.colorHelper} />\r\n        <Slider\r\n          defaultValue={1}\r\n          aria-labelledby=\"discrete-slider\"\r\n          valueLabelDisplay=\"auto\"\r\n          step={1}\r\n          min={1}\r\n          max={255}\r\n          value={this.props.color}\r\n          onChange={this.setValue(\"color\")}\r\n        />\r\n\r\n        <Typography gutterBottom>Brightness Level</Typography>\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <Brightness0 />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Slider\r\n              value={this.props.level}\r\n              valueLabelDisplay=\"auto\"\r\n              min={0}\r\n              max={10}\r\n              onChange={this.setValue(\"level\")}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Brightness7 />\r\n          </Grid>\r\n        </Grid>\r\n        <Typography gutterBottom>Duration</Typography>\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <TimelapseIcon />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Slider\r\n              value={this.props.duration}\r\n              valueLabelDisplay=\"auto\"\r\n              valueLabelFormat={this.durationFormater}\r\n              marks={[5, 10, 15, 20, 30, 45, 60, 120, 180, 240, 255]}\r\n              min={1}\r\n              max={255}\r\n              onChange={this.setValue(\"duration\")}\r\n              ValueLabelComponent={ValueLabelTooltip}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <InfiniteIcon />\r\n          </Grid>\r\n        </Grid>\r\n        <FormControl fullWidth={true} margin=\"normal\">\r\n          <InputLabel>Effect</InputLabel>\r\n          <Select value={this.props.effect} onChange={this.setValue(\"effect\")}>\r\n            {/* <MenuItem value=\"0\">Off</MenuItem> */}\r\n            <MenuItem\r\n              value={\r\n                this.props.type === \"dimmer\"\r\n                  ? DIMMER_EFFECTS.SOLID\r\n                  : ONOFF_EFFECTS.SOLID\r\n              }\r\n            >\r\n              Solid\r\n            </MenuItem>\r\n            <MenuItem\r\n              value={\r\n                this.props.type === \"dimmer\"\r\n                  ? DIMMER_EFFECTS.FAST_BLINK\r\n                  : ONOFF_EFFECTS.FAST_BLINK\r\n              }\r\n            >\r\n              Fast Blink\r\n            </MenuItem>\r\n            <MenuItem\r\n              value={\r\n                this.props.type === \"dimmer\"\r\n                  ? DIMMER_EFFECTS.SLOW_BLINK\r\n                  : ONOFF_EFFECTS.SLOW_BLINK\r\n              }\r\n            >\r\n              Slow Blink\r\n            </MenuItem>\r\n            <MenuItem\r\n              value={\r\n                this.props.type === \"dimmer\"\r\n                  ? DIMMER_EFFECTS.PULSE\r\n                  : ONOFF_EFFECTS.PULSE\r\n              }\r\n            >\r\n              Pulse\r\n            </MenuItem>\r\n            {this.props.type === \"dimmer\" && (\r\n              <MenuItem value={DIMMER_EFFECTS.CHASE}>Chase</MenuItem>\r\n            )}\r\n          </Select>\r\n        </FormControl>\r\n        <TextField\r\n          style={{ marginTop: \"60px\" }}\r\n          value={this.props.value.toString(Number(this.props.format))}\r\n          readOnly={true}\r\n          label={`Configuration Value (Parameter ${\r\n            this.props.type === \"dimmer\" ? 16 : 8\r\n          })`}\r\n          fullWidth={true}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          inputRef={this.configValue}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <Tooltip title=\"Copy to Clipboard\">\r\n                  <IconButton edge=\"end\" onClick={this.toggleMenu}>\r\n                    <SvgIcon>\r\n                      <svg viewBox=\"0 0 24 24\">\r\n                        <path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" />\r\n                      </svg>\r\n                    </SvgIcon>\r\n                  </IconButton>\r\n                </Tooltip>\r\n                <Menu\r\n                  open={Boolean(this.state.anchor)}\r\n                  anchorEl={this.state.anchor}\r\n                  onClose={this.toggleMenu}\r\n                >\r\n                  <MenuItem onClick={this.handleCopyNumber}>\r\n                    Copy Value\r\n                  </MenuItem>\r\n                  <MenuItem onClick={this.handleCopyYAML}>\r\n                    Copy as YAML\r\n                  </MenuItem>\r\n                </Menu>\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"right\"\r\n          }}\r\n          TransitionComponent={SlideTransition}\r\n          open={this.state.snackbarOpen}\r\n          autoHideDuration={4000}\r\n          onClose={this.handleSnackbarClose}\r\n          message={<span id=\"message-id\">{this.state.copyStatusText}</span>}\r\n        />\r\n        <DecoderDialog\r\n          open={this.state.decoderDialogOpen}\r\n          onClose={this.handleDecoderDialogClose}\r\n          onDecode={this.handleDecode}\r\n          format={this.props.format}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(NotificationCalc);\r\n","import React from \"react\";\r\nimport {\r\n  TableRow,\r\n  TableCell,\r\n  withStyles,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  SvgIcon,\r\n  Tooltip\r\n} from \"@material-ui/core\";\r\nimport YAML from \"json-to-pretty-yaml\";\r\nimport copyToClipboard from \"./ClipboardAccess\";\r\n\r\nconst styles = theme => ({\r\n  disabled: {\r\n    color: theme.palette.action.disabled + \"!important\"\r\n  },\r\n  highlighted: {\r\n    background: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText\r\n  }\r\n});\r\n\r\nclass SceneRow extends React.PureComponent {\r\n  static defaultProps = {\r\n    onCopy: () => {}\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      anchor: undefined\r\n    };\r\n    this.boxRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.isHighlighted && this.boxRef.current) {\r\n      this.boxRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"center\",\r\n        inline: \"center\"\r\n      });\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      prevProps.isHighlighted !== this.props.isHighlighted &&\r\n      this.props.isHighlighted &&\r\n      this.boxRef.current\r\n    ) {\r\n      this.boxRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"center\",\r\n        inline: \"center\"\r\n      });\r\n    }\r\n  }\r\n\r\n  toggleMenu = e => {\r\n    const { target } = e;\r\n    this.setState(lastState => ({ anchor: lastState.anchor ? null : target }));\r\n  };\r\n\r\n  copyToYAML = () => {\r\n    this.setState({ anchor: null });\r\n    copyToClipboard(\r\n      YAML.stringify({\r\n        scene_data: parseInt(this.props.row.data),\r\n        scene_id: parseInt(this.props.row.id)\r\n      }),\r\n      this.props.onCopy\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { isDisabled, isHighlighted, row } = this.props;\r\n    return (\r\n      <TableRow\r\n        ref={this.boxRef}\r\n        key={row.buttons}\r\n        className={\r\n          isHighlighted\r\n            ? this.props.classes.highlighted\r\n            : isDisabled\r\n            ? this.props.classes.disabled\r\n            : undefined\r\n        }\r\n      >\r\n        <TableCell\r\n          component=\"th\"\r\n          scope=\"row\"\r\n          className={\r\n            isHighlighted\r\n              ? this.props.classes.highlighted\r\n              : isDisabled\r\n              ? this.props.classes.disabled\r\n              : undefined\r\n          }\r\n        >\r\n          {row.buttons}\r\n        </TableCell>\r\n        <TableCell\r\n          className={\r\n            isHighlighted\r\n              ? this.props.classes.highlighted\r\n              : isDisabled\r\n              ? this.props.classes.disabled\r\n              : undefined\r\n          }\r\n          align=\"right\"\r\n        >\r\n          {row.id}\r\n        </TableCell>\r\n        <TableCell\r\n          className={\r\n            isHighlighted\r\n              ? this.props.classes.highlighted\r\n              : isDisabled\r\n              ? this.props.classes.disabled\r\n              : undefined\r\n          }\r\n          align=\"right\"\r\n        >\r\n          {row.data}\r\n        </TableCell>\r\n        <TableCell\r\n          className={\r\n            isHighlighted\r\n              ? this.props.classes.highlighted\r\n              : isDisabled\r\n              ? this.props.classes.disabled\r\n              : undefined\r\n          }\r\n        >\r\n          <Tooltip title=\"Copy to Clipboard\">\r\n            <IconButton size=\"small\" onClick={this.toggleMenu}>\r\n              <SvgIcon>\r\n                <svg viewBox=\"0 0 24 24\">\r\n                  <path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" />\r\n                </svg>\r\n              </SvgIcon>\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Menu\r\n            open={Boolean(this.state.anchor)}\r\n            anchorEl={this.state.anchor}\r\n            onClose={this.toggleMenu}\r\n          >\r\n            <MenuItem onClick={this.copyToYAML}>Copy as YAML</MenuItem>\r\n          </Menu>\r\n        </TableCell>\r\n      </TableRow>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SceneRow);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Typography,\r\n  Snackbar\r\n} from \"@material-ui/core\";\r\nimport Scenes from \"./Scenes\";\r\nimport SceneRow from \"./SceneRow\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nfunction SlideTransition(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nclass SceneTable extends React.PureComponent {\r\n  static propTypes = {};\r\n\r\n  static defaultProps = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      snackbarOpen: false,\r\n      copyStatusText: \"\"\r\n    };\r\n  }\r\n\r\n  handleOnCopy = success => {\r\n    this.setState({\r\n      snackbarOpen: true,\r\n      copyStatusText: success\r\n        ? \"Copied to Clipboard\"\r\n        : \"Unable to copy to clipboard. Check browser settings.\"\r\n    });\r\n  };\r\n\r\n  handleSnackbarClose = () => {\r\n    this.setState({ snackbarOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={{ maxHeight: \"400px\", overflow: \"auto\" }}>\r\n          <Table size=\"small\" stickyHeader={true}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Button Press</TableCell>\r\n                <TableCell align=\"right\">Scene ID</TableCell>\r\n                <TableCell align=\"right\">Scene Data</TableCell>\r\n                <TableCell align=\"right\"></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {Scenes.map((row, index) => {\r\n                const isHighlighted =\r\n                  Object.values(this.props.highlight || {}).join(\".\") ===\r\n                  Object.values(row).join(\".\");\r\n                const isDisabled = [0, 1, 11, 12, 13, 14].indexOf(index) > -1;\r\n                return (\r\n                  <SceneRow\r\n                    key={row.buttons}\r\n                    isHighlighted={isHighlighted}\r\n                    isDisabled={isDisabled}\r\n                    row={row}\r\n                    onCopy={this.handleOnCopy}\r\n                  />\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <Typography\r\n          variant=\"caption\"\r\n          color=\"textSecondary\"\r\n          style={{ maxWidth: \"400px\" }}\r\n          component={\"div\"}\r\n        >\r\n          Rows greyed out may require disabling the relay in order to function\r\n          or may not be supported by all hubs.\r\n        </Typography>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"right\"\r\n          }}\r\n          TransitionComponent={SlideTransition}\r\n          open={this.state.snackbarOpen}\r\n          autoHideDuration={4000}\r\n          onClose={this.handleSnackbarClose}\r\n          message={<span id=\"message-id\">{this.state.copyStatusText}</span>}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SceneTable;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Brightness0 from \"@material-ui/icons/Brightness2\";\r\nimport Brightness7 from \"@material-ui/icons/Brightness7\";\r\nimport {\r\n  Slider,\r\n  Typography,\r\n  Grid,\r\n  withStyles,\r\n  InputAdornment,\r\n  Tooltip,\r\n  IconButton,\r\n  SvgIcon,\r\n  TextField,\r\n  Menu,\r\n  Snackbar,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport copyToClipboard from \"./ClipboardAccess\";\r\nimport YAML from \"json-to-pretty-yaml\";\r\n\r\nfunction SlideTransition(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst styles = theme => ({\r\n  colorHelper: {\r\n    height: \"10px\",\r\n    width: \"100%\",\r\n    background:\r\n      \"linear-gradient(to right, rgb(255,0,0), rgb(255,125,0), rgb(255,255,0), rgb(125,255,0), rgb(0,255,0), rgb(0,255,125), rgb(0,255,255), rgb(0,125,255), rgb(0,0,255), rgb(125,0,255), rgb(255,0,255), rgb(255,0,125), rgb(255,0,0))\"\r\n  },\r\n  switchPicker: {\r\n    marginBottom: theme.spacing(3)\r\n  }\r\n});\r\n\r\nclass StandardLEDTools extends React.PureComponent {\r\n  static propTypes = {};\r\n\r\n  static defaultProps = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      anchor: null,\r\n      anchorColor: null,\r\n      snackbarOpen: false,\r\n      copyStatusText: \"\"\r\n    };\r\n  }\r\n\r\n  setValue = key => (e, v) => {\r\n    this.props.onChange(key, v);\r\n  };\r\n\r\n  toggleMenu = e => {\r\n    const { target } = e;\r\n    this.setState(lastState => ({ anchor: lastState.anchor ? null : target }));\r\n  };\r\n\r\n  toggleMenuColor = e => {\r\n    const { target } = e;\r\n    this.setState(lastState => ({\r\n      anchorColor: lastState.anchorColor ? null : target\r\n    }));\r\n  };\r\n\r\n  handleOnCopy = (success, err) => {\r\n    this.setState({\r\n      snackbarOpen: true,\r\n      copyStatusText: success\r\n        ? \"Copied to Clipboard\"\r\n        : \"Unable to copy to clipboard. Check browser settings.\"\r\n    });\r\n  };\r\n\r\n  handleSnackbarClose = () => {\r\n    this.setState({ snackbarOpen: false });\r\n  };\r\n\r\n  handleCopyNumber = () => {\r\n    this.setState({ anchor: null });\r\n    copyToClipboard(this.props.brightness, this.handleOnCopy);\r\n  };\r\n\r\n  handleCopyYAML = () => {\r\n    this.setState({ anchor: null });\r\n    copyToClipboard(\r\n      YAML.stringify({\r\n        parameter: this.props.type === \"dimmer\" ? 14 : 6,\r\n        value:\r\n          this.props.format === \"10\"\r\n            ? parseInt(\r\n                this.props.brightness.toString(Number(this.props.format))\r\n              )\r\n            : this.props.brightness.toString(Number(this.props.format))\r\n      }),\r\n      this.handleOnCopy\r\n    );\r\n  };\r\n\r\n  handleCopyNumberColor = () => {\r\n    this.setState({ anchorColor: null });\r\n    copyToClipboard(this.props.color, this.handleOnCopy);\r\n  };\r\n\r\n  handleCopyYAMLColor = () => {\r\n    this.setState({ anchorColor: null });\r\n    copyToClipboard(\r\n      YAML.stringify({\r\n        parameter: this.props.type === \"dimmer\" ? 13 : 5,\r\n        value:\r\n          this.props.format === \"10\"\r\n            ? parseInt(this.props.color.toString(Number(this.props.format)))\r\n            : this.props.color.toString(Number(this.props.format))\r\n      }),\r\n      this.handleOnCopy\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Typography gutterBottom>Color</Typography>\r\n        <div className={this.props.classes.colorHelper} />\r\n        <Slider\r\n          defaultValue={1}\r\n          aria-labelledby=\"discrete-slider\"\r\n          valueLabelDisplay=\"auto\"\r\n          step={1}\r\n          min={1}\r\n          max={255}\r\n          value={this.props.color}\r\n          onChange={this.setValue(\"standardColor\")}\r\n        />\r\n\r\n        <Typography gutterBottom>Brightness Level</Typography>\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <Brightness0 />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Slider\r\n              value={this.props.brightness}\r\n              valueLabelDisplay=\"auto\"\r\n              min={0}\r\n              max={10}\r\n              onChange={this.setValue(\"standardBrightness\")}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Brightness7 />\r\n          </Grid>\r\n        </Grid>\r\n        <TextField\r\n          style={{ marginTop: \"60px\" }}\r\n          value={this.props.color.toString(Number(this.props.format || 10))}\r\n          readOnly={true}\r\n          label={`Color Value (Parameter ${\r\n            this.props.type === \"dimmer\" ? 13 : 5\r\n          })`}\r\n          fullWidth={true}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          inputRef={this.configValueColor}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <Tooltip title=\"Copy to Clipboard\">\r\n                  <IconButton edge=\"end\" onClick={this.toggleMenuColor}>\r\n                    <SvgIcon>\r\n                      <svg viewBox=\"0 0 24 24\">\r\n                        <path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" />\r\n                      </svg>\r\n                    </SvgIcon>\r\n                  </IconButton>\r\n                </Tooltip>\r\n                <Menu\r\n                  open={Boolean(this.state.anchorColor)}\r\n                  anchorEl={this.state.anchorColor}\r\n                  onClose={this.toggleMenuColor}\r\n                >\r\n                  <MenuItem onClick={this.handleCopyNumberColor}>\r\n                    Copy Value\r\n                  </MenuItem>\r\n                  <MenuItem onClick={this.handleCopyYAMLColor}>\r\n                    Copy as YAML\r\n                  </MenuItem>\r\n                </Menu>\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n        <TextField\r\n          style={{ marginTop: \"60px\" }}\r\n          value={this.props.brightness.toString(\r\n            Number(this.props.format || 10)\r\n          )}\r\n          readOnly={true}\r\n          label={`Color Value (Parameter ${\r\n            this.props.type === \"dimmer\" ? 14 : 6\r\n          })`}\r\n          fullWidth={true}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          inputRef={this.configValueBrightness}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <Tooltip title=\"Copy to Clipboard\">\r\n                  <IconButton edge=\"end\" onClick={this.toggleMenu}>\r\n                    <SvgIcon>\r\n                      <svg viewBox=\"0 0 24 24\">\r\n                        <path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" />\r\n                      </svg>\r\n                    </SvgIcon>\r\n                  </IconButton>\r\n                </Tooltip>\r\n                <Menu\r\n                  open={Boolean(this.state.anchor)}\r\n                  anchorEl={this.state.anchor}\r\n                  onClose={this.toggleMenu}\r\n                >\r\n                  <MenuItem onClick={this.handleCopyNumber}>\r\n                    Copy Value\r\n                  </MenuItem>\r\n                  <MenuItem onClick={this.handleCopyYAML}>\r\n                    Copy as YAML\r\n                  </MenuItem>\r\n                </Menu>\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"right\"\r\n          }}\r\n          TransitionComponent={SlideTransition}\r\n          open={this.state.snackbarOpen}\r\n          autoHideDuration={4000}\r\n          onClose={this.handleSnackbarClose}\r\n          message={<span id=\"message-id\">{this.state.copyStatusText}</span>}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(StandardLEDTools);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\n\r\nclass OptionsDialog extends React.PureComponent {\r\n  static propTypes = {};\r\n\r\n  static defaultProps = {};\r\n\r\n  handleThemeChange = e => {\r\n    this.props.setTheme(e.target.value);\r\n  };\r\n\r\n  handleFormatChange = e => {\r\n    this.props.setFormat(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        open={this.props.open}\r\n        fullWidth={true}\r\n        onClose={this.props.onClose}\r\n      >\r\n        <DialogTitle>Options</DialogTitle>\r\n        <DialogContent>\r\n          <FormControl fullWidth={true} margin=\"normal\">\r\n            <InputLabel>Theme</InputLabel>\r\n            <Select value={this.props.theme} onChange={this.handleThemeChange}>\r\n              <MenuItem value=\"light\">Light</MenuItem>\r\n              <MenuItem value=\"dark\">Dark</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl fullWidth={true} margin=\"normal\">\r\n            <InputLabel>Value Format</InputLabel>\r\n            <Select\r\n              value={this.props.format}\r\n              onChange={this.handleFormatChange}\r\n            >\r\n              <MenuItem value=\"10\">Decimal</MenuItem>\r\n              <MenuItem value=\"16\">Hex</MenuItem>\r\n              <MenuItem value=\"2\">Binary</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.props.onClose}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OptionsDialog;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  CssBaseline,\r\n  withStyles,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  IconButton,\r\n  SvgIcon,\r\n  Tooltip,\r\n  AppBar,\r\n  Toolbar,\r\n  Tabs,\r\n  Tab\r\n} from \"@material-ui/core\";\r\nimport ThemeProvider from \"./ThemeProvider\";\r\nimport InfoOutlined from \"@material-ui/icons/InfoOutlined\";\r\nimport AboutDialog from \"./AboutDialog\";\r\nimport Switch from \"./Switch\";\r\nimport NotificationCalc from \"./NotificationCalc\";\r\nimport SceneTable from \"./SceneTable\";\r\nimport StandardLEDTools from \"./StandardLEDTools\";\r\nimport TuneIcon from \"@material-ui/icons/Tune\";\r\nimport OptionsDialog from \"./Options\";\r\n\r\nlet Gradient = require(\"gradient2\");\r\nlet gradient = new Gradient({\r\n  colors: [\r\n    \"rgb(255,0,0)\",\r\n    \"rgb(255,125,0)\",\r\n    \"rgb(255,255,0)\",\r\n    \"rgb(125,255,0)\",\r\n    \"rgb(0,255,0)\",\r\n    \"rgb(0,255,125)\",\r\n    \"rgb(0,255,255)\",\r\n    \"rgb(0,125,255)\",\r\n    \"rgb(0,0,255)\",\r\n    \"rgb(125,0,255)\",\r\n    \"rgb(255,0,255)\",\r\n    \"rgb(255,0,125)\",\r\n    \"rgb(255,0,0)\"\r\n  ],\r\n  steps: 256,\r\n  model: \"rgb\"\r\n});\r\n\r\nconst LED_COLORS = gradient.toArray(\"hex\");\r\n\r\nconst styles = theme => ({\r\n  switchWrapper: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-start\",\r\n    paddingTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(6),\r\n    \"&>*\": {\r\n      minWidth: \"400px\",\r\n      \"&:last-child\": {\r\n        maxWidth: \"480px\"\r\n      }\r\n    }\r\n  },\r\n  switchContainer: {\r\n    position: \"relative\"\r\n  },\r\n  colorHelper: {\r\n    height: \"10px\",\r\n    width: \"100%\",\r\n    background:\r\n      \"linear-gradient(to right, rgb(255,0,0), rgb(255,125,0), rgb(255,255,0), rgb(125,255,0), rgb(0,255,0), rgb(0,255,125), rgb(0,255,255), rgb(0,125,255), rgb(0,0,255), rgb(125,0,255), rgb(255,0,255), rgb(255,0,125), rgb(255,0,0))\"\r\n  },\r\n  credits: {\r\n    display: \"flex\",\r\n    position: \"absolute\",\r\n    bottom: \"0\",\r\n    right: \"0\",\r\n    left: \"0\",\r\n    padding: \"15px\",\r\n    justifyContent: \"space-between\"\r\n  },\r\n  optionsContainer: {\r\n    padding: theme.spacing(0, 3)\r\n  },\r\n  switchPicker: {\r\n    marginBottom: theme.spacing(3)\r\n  }\r\n});\r\n\r\n//Might Move to this calc in the future. More straight forward\r\n\r\nconst longToByteArray = function(/*long*/ long) {\r\n  // we want to represent the input as a 8-bytes array\r\n  var byteArray = [0, 0, 0, 0];\r\n\r\n  for (var index = 0; index < byteArray.length; index++) {\r\n    var byte = long & 0xff;\r\n    byteArray[index] = byte;\r\n    long = (long - byte) / 256;\r\n  }\r\n\r\n  return byteArray;\r\n};\r\n\r\n// const byteArrayToLong = function(/*byte[]*/ byteArray) {\r\n//   var value = 0;\r\n//   for (var i = byteArray.length - 1; i >= 0; i--) {\r\n//     value = value * 256 + byteArray[i];\r\n//   }\r\n\r\n//   return value;\r\n// };\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      color: 1,\r\n      duration: 255,\r\n      level: 10,\r\n      effect: \"1\",\r\n      value: 33491457,\r\n      aboutDialogOpen: false,\r\n      type: \"onoff\",\r\n      tab: 0,\r\n      highlight: null,\r\n      standardColor: 1,\r\n      standardBrightness: 10\r\n    };\r\n  }\r\n\r\n  setValue = (param, value) => {\r\n    if (param === \"all\") {\r\n      this.setState(value, () => {\r\n        this.setState(lastState => ({\r\n          value:\r\n            parseInt(lastState.color) +\r\n            lastState.level * 256 +\r\n            lastState.duration * 65536 +\r\n            lastState.effect * 16777216\r\n        }));\r\n      });\r\n    } else {\r\n      this.setState({ [param]: value }, () => {\r\n        if (this.state.type === \"onoff\" && this.state.effect === \"5\") {\r\n          this.setState({ effect: \"1\" });\r\n        }\r\n        //83823359\r\n        this.setState(lastState => ({\r\n          value:\r\n            parseInt(lastState.color) +\r\n            lastState.level * 256 +\r\n            lastState.duration * 65536 +\r\n            lastState.effect * 16777216\r\n        }));\r\n      });\r\n    }\r\n  };\r\n\r\n  setSwitchType = e => {\r\n    this.setState({ type: e.target.value });\r\n  };\r\n\r\n  openAboutDialog = () => {\r\n    this.setState({ aboutDialogOpen: true });\r\n  };\r\n\r\n  closeAboutDialog = () => {\r\n    this.setState({ aboutDialogOpen: false });\r\n  };\r\n\r\n  tabChange = (e, value) => {\r\n    this.setState({ tab: value });\r\n  };\r\n\r\n  onSceneTrigger = scene => {\r\n    this.setState({\r\n      highlight: scene,\r\n      tab: scene !== undefined ? 2 : this.state.tab\r\n    });\r\n  };\r\n\r\n  openOptions = () => {\r\n    this.setState({ optionsDialogOpen: true });\r\n  };\r\n\r\n  closeOptions = () => {\r\n    this.setState({ optionsDialogOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ThemeProvider>\r\n        {({ setTheme, themeType, formatType, setFormat }) => (\r\n          <div className={this.props.classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"static\">\r\n              <Toolbar>\r\n                <Typography variant=\"h6\" style={{ flexGrow: \"1\" }}>\r\n                  Inovelli Toolbox\r\n                </Typography>\r\n                <div style={{ flexShrink: \"0\", flexGrow: \"0\" }}>\r\n                  {/* <Tooltip title=\"Light\\Dark Theme\">\r\n                    <IconButton\r\n                      color=\"inherit\"\r\n                      onClick={() => {\r\n                        setTheme(themeType === \"dark\" ? \"light\" : \"dark\");\r\n                      }}\r\n                    >\r\n                      <SvgIcon>\r\n                        {themeType === \"light\" ? (\r\n                          <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M20,11H23V13H20V11M1,11H4V13H1V11M13,1V4H11V1H13M4.92,3.5L7.05,5.64L5.63,7.05L3.5,4.93L4.92,3.5M16.95,5.63L19.07,3.5L20.5,4.93L18.37,7.05L16.95,5.63M12,6A6,6 0 0,1 18,12C18,14.22 16.79,16.16 15,17.2V19A1,1 0 0,1 14,20H10A1,1 0 0,1 9,19V17.2C7.21,16.16 6,14.22 6,12A6,6 0 0,1 12,6M14,21V22A1,1 0 0,1 13,23H11A1,1 0 0,1 10,22V21H14M11,18H13V15.87C14.73,15.43 16,13.86 16,12A4,4 0 0,0 12,8A4,4 0 0,0 8,12C8,13.86 9.27,15.43 11,15.87V18Z\" />\r\n                          </svg>\r\n                        ) : (\r\n                          <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M12,2A7,7 0 0,1 19,9C19,11.38 17.81,13.47 16,14.74V17A1,1 0 0,1 15,18H9A1,1 0 0,1 8,17V14.74C6.19,13.47 5,11.38 5,9A7,7 0 0,1 12,2M9,21V20H15V21A1,1 0 0,1 14,22H10A1,1 0 0,1 9,21M12,4A5,5 0 0,0 7,9C7,11.05 8.23,12.81 10,13.58V16H14V13.58C15.77,12.81 17,11.05 17,9A5,5 0 0,0 12,4Z\" />\r\n                          </svg>\r\n                        )}\r\n                      </SvgIcon>\r\n                    </IconButton>\r\n                  </Tooltip> */}\r\n                  <Tooltip title=\"Options\">\r\n                    <IconButton color=\"inherit\" onClick={this.openOptions}>\r\n                      <TuneIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"About\">\r\n                    <IconButton color=\"inherit\" onClick={this.openAboutDialog}>\r\n                      <InfoOutlined />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </div>\r\n              </Toolbar>\r\n            </AppBar>\r\n            <div className={this.props.classes.switchWrapper}>\r\n              <div>\r\n                <Switch\r\n                  type={this.state.type}\r\n                  color={\r\n                    LED_COLORS[\r\n                      parseInt(\r\n                        this.state.tab\r\n                          ? this.state.color\r\n                          : this.state.standardColor\r\n                      )\r\n                    ]\r\n                  }\r\n                  effect={this.state.tab ? this.state.effect : \"1\"}\r\n                  level={\r\n                    this.state.tab\r\n                      ? this.state.level\r\n                      : this.state.standardBrightness\r\n                  }\r\n                  onSceneTriggered={this.onSceneTrigger}\r\n                />\r\n              </div>\r\n              <div className={this.props.classes.optionsContainer}>\r\n                <div className={this.props.classes.switchPicker}>\r\n                  <FormControl fullWidth={true} margin=\"normal\">\r\n                    <InputLabel>Switch Type</InputLabel>\r\n                    <Select\r\n                      value={this.state.type}\r\n                      onChange={this.setSwitchType}\r\n                    >\r\n                      <MenuItem value=\"onoff\">Standard On/Off</MenuItem>\r\n                      <MenuItem value=\"dimmer\">Dimmer</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                  <Tabs\r\n                    value={this.state.tab}\r\n                    indicatorColor=\"primary\"\r\n                    onChange={this.tabChange}\r\n                    style={{ marginBottom: \"10px\" }}\r\n                    variant=\"fullWidth\"\r\n                    centered\r\n                  >\r\n                    <Tab label=\"LED\" />\r\n                    <Tab label=\"Notifications\" />\r\n                    <Tab label=\"Scenes\" />\r\n                  </Tabs>\r\n                </div>\r\n\r\n                {this.state.tab === 1 && (\r\n                  <NotificationCalc\r\n                    color={this.state.color}\r\n                    level={this.state.level}\r\n                    duration={this.state.duration}\r\n                    effect={this.state.effect}\r\n                    value={this.state.value}\r\n                    type={this.state.type}\r\n                    onChange={this.setValue}\r\n                    format={formatType}\r\n                  />\r\n                )}\r\n                {this.state.tab === 2 && (\r\n                  <SceneTable highlight={this.state.highlight} />\r\n                )}\r\n                {this.state.tab === 0 && (\r\n                  <StandardLEDTools\r\n                    color={this.state.standardColor}\r\n                    brightness={this.state.standardBrightness}\r\n                    onChange={this.setValue}\r\n                    format={formatType}\r\n                    type={this.state.type}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n            <AboutDialog\r\n              open={this.state.aboutDialogOpen}\r\n              onClose={this.closeAboutDialog}\r\n            />\r\n            <OptionsDialog\r\n              open={this.state.optionsDialogOpen}\r\n              onClose={this.closeOptions}\r\n              theme={themeType}\r\n              format={formatType}\r\n              setTheme={setTheme}\r\n              setFormat={setFormat}\r\n            />\r\n          </div>\r\n        )}\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default {\r\n  onUpdate: registration => {\r\n    registration.unregister().then(() => {\r\n      window.location.reload();\r\n    });\r\n  },\r\n  onSuccess: registration => {\r\n    console.info(\"service worker on success state\");\r\n    console.log(registration);\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport swConfig from \"./swconfig\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register(swConfig);\n","module.exports = __webpack_public_path__ + \"static/media/Inovelli-LZW30-SN.b878040d.gif\";"],"sourceRoot":""}