{"version":3,"sources":["ThemeProvider.js","AboutDialog.js","Effects.js","LED.js","NotificationLED.js","App.js","serviceWorker.js","index.js","Inovelli-LZW30-SN.gif"],"names":["ThemeProvider","props","state","themeType","window","localStorage","setTheme","theme","setState","setItem","THEME","createMuiTheme","palette","type","this","primary","main","MuiThemeProvider","children","React","Component","AboutDialog","Dialog","open","onClose","DialogTitle","DialogContent","Typography","variant","gutterBottom","List","dense","ListItem","ListItemText","secondary","IconButton","component","href","DialogActions","Button","onClick","DIMMER_EFFECTS","ONOFF_EFFECTS","LED","effectCSS","effectStyles","level","effect","classes","fastBlink","slowBlink","strobe","chase","backgroundImage","color","backgroundColor","boxShadow","zIndex","height","forever","className","notificationLED","style","overflow","position","id","withStyles","background","opacity","bottom","width","animationIterationCount","animationDuration","animationName","animationTimingFunction","NotificationLED","root","display","flexDirection","LED_COLORS","require","colors","steps","model","toArray","durationFormater","val","Math","floor","ValueLabelComponent","value","popperRef","useRef","useEffect","current","update","Tooltip","PopperProps","enterTouchDelay","placement","title","App","setValue","key","e","v","target","lastState","parseInt","duration","openAboutDialog","aboutDialogOpen","closeAboutDialog","handleCopy","configValue","select","document","execCommand","createRef","CssBaseline","AppBar","Toolbar","flexGrow","flexShrink","SvgIcon","viewBox","d","switchWrapper","switchContainer","alt","src","lzw30sn","right","optionsContainer","switchPicker","FormControl","fullWidth","margin","InputLabel","Select","onChange","MenuItem","colorHelper","Slider","defaultValue","aria-labelledby","valueLabelDisplay","step","min","max","Grid","container","spacing","item","xs","valueLabelFormat","marks","TextField","marginTop","readOnly","label","inputRef","InputProps","endAdornment","InputAdornment","edge","flexWrap","justifyContent","alignItems","minWidth","credits","left","padding","marginBottom","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.550fb49f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst primary = \"#c21414\";\r\n\r\nclass ThemeProvider extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      themeType: window.localStorage.themeType || \"light\",\r\n      setTheme: theme => {\r\n        if (theme === \"light\" || theme === \"dark\") {\r\n          this.setState({ themeType: theme });\r\n          window.localStorage.setItem(\"themeType\", theme);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const THEME = createMuiTheme({\r\n      palette: {\r\n        type: this.state.themeType,\r\n        primary: { main: primary }\r\n      }\r\n    });\r\n    return (\r\n      <MuiThemeProvider theme={THEME}>\r\n        {this.props.children(this.state)}\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ThemeProvider;\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  IconButton\r\n} from \"@material-ui/core\";\r\nimport Twitter from \"@material-ui/icons/Twitter\";\r\nimport GitHub from \"@material-ui/icons/GitHub\";\r\nimport LinkedIn from \"@material-ui/icons/LinkedIn\";\r\n\r\nclass AboutDialog extends React.Component {\r\n  render() {\r\n    return (\r\n      <Dialog open={this.props.open} onClose={this.props.onClose}>\r\n        <DialogTitle>About</DialogTitle>\r\n        <DialogContent>\r\n          <Typography variant=\"h6\">About the Tool</Typography>\r\n          <Typography variant=\"caption\" gutterBottom={true}>\r\n            This is a simple application to assist in calculating the\r\n            configuration values to send to your Inovelli v2 ZWave Light\r\n            switches. The values calculated by this tool can be used by any\r\n            compatible ZWave controller. See your controller documentation for\r\n            information on where to use the values produced by this tool.\r\n            <br />\r\n            <br />\r\n          </Typography>\r\n          <Typography variant=\"h6\">Compatible Switches</Typography>\r\n          <List dense={true}>\r\n            <ListItem>\r\n              <ListItemText\r\n                primary=\"Inovelli LZW30-SN-1\"\r\n                secondary=\"On/Off Switch + Scenes\"\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText\r\n                primary=\"Inovelli  LZW31-SN-1\"\r\n                secondary=\"Dimmer Switch + Scenes\"\r\n              />\r\n            </ListItem>\r\n          </List>\r\n          <Typography variant=\"h6\">Credits</Typography>\r\n          <Typography>Written By @nathanfiscus</Typography>\r\n          <IconButton\r\n            component=\"a\"\r\n            href=\"https://www.github.com/nathanfiscus/inovelli-notification-calc\"\r\n          >\r\n            <GitHub />\r\n          </IconButton>\r\n          <IconButton component=\"a\" href=\"https://www.twitter.com/nathanfiscus\">\r\n            <Twitter />\r\n          </IconButton>\r\n          <IconButton\r\n            component=\"a\"\r\n            href=\"https://www.linkedin.com/in/nathanfiscus\"\r\n          >\r\n            <LinkedIn />\r\n          </IconButton>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.props.onClose}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutDialog;\r\n","export const DIMMER_EFFECTS = {\r\n  SOLID: \"1\",\r\n  CHASE: \"2\",\r\n  FAST_BLINK: \"3\",\r\n  SLOW_BLINK: \"4\",\r\n  PULSE: \"5\"\r\n};\r\n\r\nexport const ONOFF_EFFECTS = {\r\n  SOLID: \"1\",\r\n  FAST_BLINK: \"2\",\r\n  SLOW_BLINK: \"3\",\r\n  PULSE: \"4\"\r\n};\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport { DIMMER_EFFECTS, ONOFF_EFFECTS } from \"./Effects\";\r\n\r\nconst styles = theme => ({\r\n  \"@global\": {\r\n    \"@keyframes pulse\": {\r\n      \"50%\": {\r\n        background: \"#CCCCCC\",\r\n        boxShadow: \"0px 0px 0px 0px\"\r\n      }\r\n    },\r\n    \"@keyframes blink\": {\r\n      \"50%\": { opacity: \"0.0\" }\r\n    },\r\n    \"@keyframes chase\": {\r\n      \"0%\": { bottom: \"-60%\" },\r\n      \"50%\": { bottom: \"30%\" },\r\n      \"100%\": { bottom: \"-60%\" }\r\n    }\r\n  },\r\n  notificationLED: {\r\n    width: \"7px\",\r\n    height: \"39px\",\r\n    backgroundColor: \"#CCCCCC\"\r\n  },\r\n  forever: {\r\n    animationIterationCount: \"infinite\"\r\n  },\r\n  strobe: {\r\n    animationDuration: \"3.5s\",\r\n    animationName: \"pulse\"\r\n    //animationTimingFunction: \"linear\"\r\n  },\r\n  fastBlink: {\r\n    animationDuration: \"0.80s\",\r\n    animationName: \"blink\",\r\n    animationTimingFunction: \"step-start\"\r\n  },\r\n  slowBlink: {\r\n    animationDuration: \"2s\",\r\n    animationName: \"blink\",\r\n    animationTimingFunction: \"step-start\"\r\n  },\r\n  chase: {\r\n    animationDuration: \"2s\",\r\n    animationName: \"chase\",\r\n    position: \"absolute\",\r\n    animationTimingFunction: \"linear\"\r\n  }\r\n});\r\n\r\nclass LED extends React.Component {\r\n  render() {\r\n    let effectCSS = \"\";\r\n    let effectStyles = {};\r\n    effectStyles[\"opacity\"] = this.props.level / 10;\r\n    switch (this.props.effect) {\r\n      case this.props.type === \"dimmer\"\r\n        ? DIMMER_EFFECTS.FAST_BLINK\r\n        : ONOFF_EFFECTS.FAST_BLINK:\r\n        effectCSS += ` ${this.props.classes.fastBlink}`;\r\n        break;\r\n      case this.props.type === \"dimmer\"\r\n        ? DIMMER_EFFECTS.SLOW_BLINK\r\n        : ONOFF_EFFECTS.SLOW_BLINK:\r\n        effectCSS += ` ${this.props.classes.slowBlink}`;\r\n        break;\r\n      case this.props.type === \"dimmer\"\r\n        ? DIMMER_EFFECTS.PULSE\r\n        : ONOFF_EFFECTS.PULSE:\r\n        effectCSS += ` ${this.props.classes.strobe}`;\r\n        break;\r\n      case this.props.type === \"dimmer\" ? DIMMER_EFFECTS.CHASE : \"\":\r\n        effectCSS += ` ${this.props.classes.chase}`;\r\n        effectStyles.backgroundImage = `linear-gradient(transparent,${this.props.color},transparent)`;\r\n        effectStyles.backgroundColor = \"unset\";\r\n        effectStyles.boxShadow = \"unset\";\r\n        effectStyles.zIndex = 0;\r\n        effectStyles.height = \"300px\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    effectCSS += ` ${this.props.classes.forever}`;\r\n\r\n    return (\r\n      <div\r\n        className={this.props.classes.notificationLED}\r\n        style={{\r\n          ...this.props.style,\r\n          overflow: \"hidden\",\r\n          position: \"relative\"\r\n        }}\r\n      >\r\n        <span\r\n          id=\"notification-led\"\r\n          className={this.props.classes.notificationLED + effectCSS}\r\n          style={{\r\n            backgroundColor: this.props.color,\r\n            color: this.props.color,\r\n            position: \"absolute\",\r\n            zIndex: \"2\",\r\n            boxShadow: \"0px 0px 5px 0px\",\r\n            ...this.props.style,\r\n            ...effectStyles\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(LED);\r\n","import React from \"react\";\r\nimport LED from \"./LED\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  }\r\n});\r\n\r\nclass NotificationLED extends React.Component {\r\n  render() {\r\n    const { type, color, effect, level } = this.props;\r\n    return (\r\n      <div style={this.props.style}>\r\n        <LED\r\n          color={color}\r\n          effect={effect}\r\n          level={level}\r\n          type={type}\r\n          style={type === \"dimmer\" ? { height: \"210px\" } : {}}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(NotificationLED);\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  CssBaseline,\n  withStyles,\n  Typography,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Slider,\n  TextField,\n  InputAdornment,\n  IconButton,\n  SvgIcon,\n  Grid,\n  Tooltip,\n  AppBar,\n  Toolbar\n} from \"@material-ui/core\";\nimport Brightness0 from \"@material-ui/icons/Brightness2\";\nimport Brightness7 from \"@material-ui/icons/Brightness7\";\nimport InfiniteIcon from \"@material-ui/icons/AllInclusive\";\nimport TimelapseIcon from \"@material-ui/icons/Timelapse\";\nimport ThemeProvider from \"./ThemeProvider\";\nimport InfoOutlined from \"@material-ui/icons/InfoOutlined\";\nimport AboutDialog from \"./AboutDialog\";\n\nimport lzw30sn from \"./Inovelli-LZW30-SN.gif\";\nimport NotificationLED from \"./NotificationLED\";\nimport { DIMMER_EFFECTS, ONOFF_EFFECTS } from \"./Effects\";\n\nlet Gradient = require(\"gradient2\");\nlet gradient = new Gradient({\n  colors: [\n    \"rgb(255,0,0)\",\n    \"rgb(255,125,0)\",\n    \"rgb(255,255,0)\",\n    \"rgb(125,255,0)\",\n    \"rgb(0,255,0)\",\n    \"rgb(0,255,125)\",\n    \"rgb(0,255,255)\",\n    \"rgb(0,125,255)\",\n    \"rgb(0,0,255)\",\n    \"rgb(125,0,255)\",\n    \"rgb(255,0,255)\",\n    \"rgb(255,0,125)\",\n    \"rgb(255,0,0)\"\n  ],\n  steps: 256,\n  model: \"rgb\"\n});\n\nconst LED_COLORS = gradient.toArray(\"hex\");\n\nconst durationFormater = val => {\n  switch (val) {\n    case 255:\n      return \"Forever\";\n    case 1:\n      return \"1 second\";\n    default:\n      if (val > 59) {\n        return `${Math.floor(val / 60)} minutes ${val % 60} seconds`;\n      } else {\n        return `${val} seconds`;\n      }\n  }\n};\n\nfunction ValueLabelComponent(props) {\n  const { children, open, value } = props;\n\n  const popperRef = React.useRef(null);\n  React.useEffect(() => {\n    if (popperRef.current) {\n      popperRef.current.update();\n    }\n  });\n\n  return (\n    <Tooltip\n      PopperProps={{\n        popperRef\n      }}\n      open={open}\n      enterTouchDelay={0}\n      placement=\"top\"\n      title={durationFormater(value)}\n    >\n      {children}\n    </Tooltip>\n  );\n}\n\nValueLabelComponent.propTypes = {\n  children: PropTypes.element.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.number.isRequired\n};\n\nconst styles = theme => ({\n  switchWrapper: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    \"&>*\": {\n      minWidth: \"400px\"\n    }\n  },\n  switchContainer: {\n    position: \"relative\"\n  },\n  colorHelper: {\n    height: \"10px\",\n    width: \"100%\",\n    background:\n      \"linear-gradient(to right, rgb(255,0,0), rgb(255,125,0), rgb(255,255,0), rgb(125,255,0), rgb(0,255,0), rgb(0,255,125), rgb(0,255,255), rgb(0,125,255), rgb(0,0,255), rgb(125,0,255), rgb(255,0,255), rgb(255,0,125), rgb(255,0,0))\"\n  },\n  credits: {\n    display: \"flex\",\n    position: \"absolute\",\n    bottom: \"0\",\n    right: \"0\",\n    left: \"0\",\n    padding: \"15px\",\n    justifyContent: \"space-between\"\n  },\n  optionsContainer: {\n    padding: theme.spacing(0, 3)\n  },\n  switchPicker: {\n    marginBottom: theme.spacing(3)\n  }\n});\n\n//Might Move to this calc in the future. More straight forward\n\n// const longToByteArray = function(/*long*/ long) {\n//   // we want to represent the input as a 8-bytes array\n//   var byteArray = [0, 0, 0, 0];\n\n//   for (var index = 0; index < byteArray.length; index++) {\n//     var byte = long & 0xff;\n//     byteArray[index] = byte;\n//     long = (long - byte) / 256;\n//   }\n\n//   return byteArray;\n// };\n\n// const byteArrayToLong = function(/*byte[]*/ byteArray) {\n//   var value = 0;\n//   for (var i = byteArray.length - 1; i >= 0; i--) {\n//     value = value * 256 + byteArray[i];\n//   }\n\n//   return value;\n// };\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: 1,\n      duration: 255,\n      level: 10,\n      effect: \"1\",\n      value: \"33491457\",\n      aboutDialogOpen: false,\n      type: \"onoff\"\n    };\n    this.configValue = React.createRef();\n  }\n\n  setValue = key => (e, v) => {\n    this.setState(\n      { [key]: key !== \"effect\" && key !== \"type\" ? v : e.target.value },\n      () => {\n        if (this.state.type === \"onoff\" && this.state.effect === \"5\") {\n          this.setState({ effect: \"1\" });\n        }\n        //83823359\n        this.setState(lastState => ({\n          value:\n            parseInt(lastState.color) +\n            lastState.level * 256 +\n            lastState.duration * 65536 +\n            lastState.effect * 16777216\n        }));\n      }\n    );\n  };\n\n  openAboutDialog = () => {\n    this.setState({ aboutDialogOpen: true });\n  };\n\n  closeAboutDialog = () => {\n    this.setState({ aboutDialogOpen: false });\n  };\n\n  handleCopy = () => {\n    if (this.configValue.current) {\n      this.configValue.current.select();\n      document.execCommand(\"copy\");\n    }\n  };\n\n  durationFormater = val => {\n    switch (val) {\n      case 255:\n        return \"Forever\";\n      case 1:\n        return \"1 second\";\n      default:\n        if (val > 59) {\n          return `${Math.floor(val / 60)}${val % 60} seconds`;\n        } else {\n          return `${val} seconds`;\n        }\n    }\n  };\n\n  render() {\n    return (\n      <ThemeProvider>\n        {({ setTheme, themeType }) => (\n          <div className={this.props.classes.root}>\n            <CssBaseline />\n            <AppBar position=\"static\">\n              <Toolbar>\n                <Typography variant=\"h6\" style={{ flexGrow: \"1\" }}>\n                  Inovelli LED Notification Calculator\n                </Typography>\n                <div style={{ flexShrink: \"0\", flexGrow: \"0\" }}>\n                  <Tooltip title=\"Light\\Dark Theme\">\n                    <IconButton\n                      color=\"inherit\"\n                      onClick={() => {\n                        setTheme(themeType === \"dark\" ? \"light\" : \"dark\");\n                      }}\n                    >\n                      <SvgIcon>\n                        {themeType === \"light\" ? (\n                          <svg viewBox=\"0 0 24 24\">\n                            <path d=\"M20,11H23V13H20V11M1,11H4V13H1V11M13,1V4H11V1H13M4.92,3.5L7.05,5.64L5.63,7.05L3.5,4.93L4.92,3.5M16.95,5.63L19.07,3.5L20.5,4.93L18.37,7.05L16.95,5.63M12,6A6,6 0 0,1 18,12C18,14.22 16.79,16.16 15,17.2V19A1,1 0 0,1 14,20H10A1,1 0 0,1 9,19V17.2C7.21,16.16 6,14.22 6,12A6,6 0 0,1 12,6M14,21V22A1,1 0 0,1 13,23H11A1,1 0 0,1 10,22V21H14M11,18H13V15.87C14.73,15.43 16,13.86 16,12A4,4 0 0,0 12,8A4,4 0 0,0 8,12C8,13.86 9.27,15.43 11,15.87V18Z\" />\n                          </svg>\n                        ) : (\n                          <svg viewBox=\"0 0 24 24\">\n                            <path d=\"M12,2A7,7 0 0,1 19,9C19,11.38 17.81,13.47 16,14.74V17A1,1 0 0,1 15,18H9A1,1 0 0,1 8,17V14.74C6.19,13.47 5,11.38 5,9A7,7 0 0,1 12,2M9,21V20H15V21A1,1 0 0,1 14,22H10A1,1 0 0,1 9,21M12,4A5,5 0 0,0 7,9C7,11.05 8.23,12.81 10,13.58V16H14V13.58C15.77,12.81 17,11.05 17,9A5,5 0 0,0 12,4Z\" />\n                          </svg>\n                        )}\n                      </SvgIcon>\n                    </IconButton>\n                  </Tooltip>\n                  <Tooltip title=\"About\">\n                    <IconButton color=\"inherit\" onClick={this.openAboutDialog}>\n                      <InfoOutlined />\n                    </IconButton>\n                  </Tooltip>\n                </div>\n              </Toolbar>\n            </AppBar>\n            <div className={this.props.classes.switchWrapper}>\n              <div className={this.props.classes.switchContainer}>\n                <img alt=\"Inovelli-LZW30-SN\" src={lzw30sn} />\n                <span\n                  id=\"frosted-glass-notification-led\"\n                  className={this.props.classes.notificationLED}\n                  style={{\n                    opacity: \"0.25\",\n                    zIndex: 3,\n                    backgroundColor: \"#ffffff\"\n                  }}\n                />\n                <NotificationLED\n                  style={{\n                    bottom: \"162px\",\n                    right: \"129px\",\n                    position: \"absolute\"\n                  }}\n                  type={this.state.type}\n                  color={LED_COLORS[parseInt(this.state.color)]}\n                  effect={this.state.effect}\n                  level={this.state.level}\n                />\n              </div>\n              <div className={this.props.classes.optionsContainer}>\n                <div className={this.props.classes.switchPicker}>\n                  <FormControl fullWidth={true} margin=\"normal\">\n                    <InputLabel>Switch Type</InputLabel>\n                    <Select\n                      value={this.state.type}\n                      onChange={this.setValue(\"type\")}\n                    >\n                      <MenuItem value=\"onoff\">Standard On/Off</MenuItem>\n                      <MenuItem value=\"dimmer\">Dimmer</MenuItem>\n                    </Select>\n                  </FormControl>\n                </div>\n                <Typography variant=\"h4\" gutterBottom>\n                  LED Options\n                </Typography>\n                <Typography gutterBottom>Color</Typography>\n                <div className={this.props.classes.colorHelper} />\n                <Slider\n                  defaultValue={1}\n                  aria-labelledby=\"discrete-slider\"\n                  valueLabelDisplay=\"auto\"\n                  step={1}\n                  min={1}\n                  max={255}\n                  value={this.state.color}\n                  onChange={this.setValue(\"color\")}\n                />\n\n                <Typography gutterBottom>Brightness Level</Typography>\n                <Grid container spacing={2}>\n                  <Grid item>\n                    <Brightness0 />\n                  </Grid>\n                  <Grid item xs>\n                    <Slider\n                      value={this.state.level}\n                      valueLabelDisplay=\"auto\"\n                      min={0}\n                      max={10}\n                      onChange={this.setValue(\"level\")}\n                    />\n                  </Grid>\n                  <Grid item>\n                    <Brightness7 />\n                  </Grid>\n                </Grid>\n                <Typography gutterBottom>Duration</Typography>\n                <Grid container spacing={2}>\n                  <Grid item>\n                    <TimelapseIcon />\n                  </Grid>\n                  <Grid item xs>\n                    <Slider\n                      value={this.state.duration}\n                      valueLabelDisplay=\"auto\"\n                      valueLabelFormat={this.durationFormater}\n                      marks={[5, 10, 15, 20, 30, 45, 60, 120, 180, 240, 255]}\n                      min={1}\n                      max={255}\n                      onChange={this.setValue(\"duration\")}\n                      ValueLabelComponent={ValueLabelComponent}\n                    />\n                  </Grid>\n                  <Grid item>\n                    <InfiniteIcon />\n                  </Grid>\n                </Grid>\n                <FormControl fullWidth={true} margin=\"normal\">\n                  <InputLabel>Effect</InputLabel>\n                  <Select\n                    value={this.state.effect}\n                    onChange={this.setValue(\"effect\")}\n                  >\n                    {/* <MenuItem value=\"0\">Off</MenuItem> */}\n                    <MenuItem\n                      value={\n                        this.state.type === \"dimmer\"\n                          ? DIMMER_EFFECTS.SOLID\n                          : ONOFF_EFFECTS.SOLID\n                      }\n                    >\n                      Solid\n                    </MenuItem>\n                    <MenuItem\n                      value={\n                        this.state.type === \"dimmer\"\n                          ? DIMMER_EFFECTS.FAST_BLINK\n                          : ONOFF_EFFECTS.FAST_BLINK\n                      }\n                    >\n                      Fast Blink\n                    </MenuItem>\n                    <MenuItem\n                      value={\n                        this.state.type === \"dimmer\"\n                          ? DIMMER_EFFECTS.SLOW_BLINK\n                          : ONOFF_EFFECTS.SLOW_BLINK\n                      }\n                    >\n                      Slow Blink\n                    </MenuItem>\n                    <MenuItem\n                      value={\n                        this.state.type === \"dimmer\"\n                          ? DIMMER_EFFECTS.PULSE\n                          : ONOFF_EFFECTS.PULSE\n                      }\n                    >\n                      Pulse\n                    </MenuItem>\n                    {this.state.type === \"dimmer\" && (\n                      <MenuItem value={DIMMER_EFFECTS.CHASE}>Chase</MenuItem>\n                    )}\n                  </Select>\n                </FormControl>\n                <TextField\n                  style={{ marginTop: \"60px\" }}\n                  value={this.state.value}\n                  readOnly={true}\n                  label=\"Configuration Value\"\n                  fullWidth={true}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  inputRef={this.configValue}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <Tooltip title=\"Copy to Clipboard\">\n                          <IconButton edge=\"end\" onClick={this.handleCopy}>\n                            <SvgIcon>\n                              <svg viewBox=\"0 0 24 24\">\n                                <path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" />\n                              </svg>\n                            </SvgIcon>\n                          </IconButton>\n                        </Tooltip>\n                      </InputAdornment>\n                    )\n                  }}\n                />\n              </div>\n            </div>\n            <AboutDialog\n              open={this.state.aboutDialogOpen}\n              onClose={this.closeAboutDialog}\n            />\n          </div>\n        )}\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/Inovelli-LZW30-SN.b878040d.gif\";"],"sourceRoot":""}