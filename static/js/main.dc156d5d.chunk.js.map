{"version":3,"sources":["Inovelli-LZW30-SN.gif","App.js","serviceWorker.js","index.js"],"names":["module","exports","LED_COLORS","require","colors","steps","model","toArray","durationFormater","val","console","log","Math","floor","ValueLabelComponent","props","children","open","value","popperRef","React","useRef","useEffect","current","update","Tooltip","PopperProps","enterTouchDelay","placement","title","App","setValue","key","e","v","setState","target","lastState","parseInt","color","level","duration","effect","handleCopy","configValue","select","document","execCommand","state","createRef","effectCSS","effectStyles","this","classes","fastBlink","slowBlink","strobe","forever","className","root","Typography","variant","switchWrapper","switchContainer","alt","src","lzw30sn","height","width","id","notificationLED","style","backgroundColor","zIndex","gutterBottom","colorHelper","Slider","defaultValue","aria-labelledby","valueLabelDisplay","step","min","max","onChange","Grid","container","spacing","item","xs","valueLabelFormat","marks","FormControl","fullWidth","margin","InputLabel","Select","MenuItem","TextField","marginTop","readOnly","label","inputRef","InputProps","endAdornment","InputAdornment","position","IconButton","edge","onClick","SvgIcon","viewBox","d","credits","href","Component","withStyles","theme","background","opacity","display","flexWrap","justifyContent","alignItems","minWidth","bottom","right","animationIterationCount","animationDuration","animationName","animationTimingFunction","left","padding","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc156d5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Inovelli-LZW30-SN.b878040d.gif\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  withStyles,\n  Typography,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Slider,\n  TextField,\n  InputAdornment,\n  IconButton,\n  SvgIcon,\n  Grid,\n  Tooltip\n} from \"@material-ui/core\";\nimport Brightness0 from \"@material-ui/icons/Brightness2\";\nimport Brightness7 from \"@material-ui/icons/Brightness7\";\nimport InfiniteIcon from \"@material-ui/icons/AllInclusive\";\nimport TimelapseIcon from \"@material-ui/icons/Timelapse\";\n\nimport lzw30sn from \"./Inovelli-LZW30-SN.gif\";\nlet Gradient = require(\"gradient2\");\nlet gradient = new Gradient({\n  colors: [\"orangered\", \"yellow\", \"green\", \"cyan\", \"blue\", \"violet\", \"red\"],\n  steps: 256,\n  model: \"rgb\"\n});\n\nconst LED_COLORS = gradient.toArray(\"hex\");\n\nconst durationFormater = val => {\n  console.log(val);\n  switch (val) {\n    case 255:\n      return \"Forever\";\n    case 1:\n      return \"1 second\";\n    default:\n      if (val > 59) {\n        return `${Math.floor(val / 60)} minutes ${val % 60} seconds`;\n      } else {\n        return `${val} seconds`;\n      }\n  }\n};\n\nfunction ValueLabelComponent(props) {\n  const { children, open, value } = props;\n\n  const popperRef = React.useRef(null);\n  React.useEffect(() => {\n    if (popperRef.current) {\n      popperRef.current.update();\n    }\n  });\n\n  return (\n    <Tooltip\n      PopperProps={{\n        popperRef\n      }}\n      open={open}\n      enterTouchDelay={0}\n      placement=\"top\"\n      title={durationFormater(value)}\n    >\n      {children}\n    </Tooltip>\n  );\n}\n\nValueLabelComponent.propTypes = {\n  children: PropTypes.element.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.number.isRequired\n};\n\nconst styles = theme => ({\n  \"@global\": {\n    \"@keyframes pulse\": {\n      \"50%\": {\n        background: \"#CCCCCC\"\n      }\n    },\n    \"@keyframes blink\": {\n      \"50%\": { opacity: \"0.0\" }\n    }\n  },\n  switchWrapper: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    \"&>*\": {\n      minWidth: \"400px\"\n    }\n  },\n  switchContainer: {\n    position: \"relative\"\n  },\n  notificationLED: {\n    position: \"absolute\",\n    width: \"7px\",\n    height: \"39px\",\n    backgroundColor: \"#CCCCCC\",\n    bottom: \"162px\",\n    right: \"129px\"\n  },\n  colorHelper: {\n    height: \"10px\",\n    width: \"100%\",\n    background:\n      \"linear-gradient(to right, orangered, yellow, green, cyan, blue, violet,red)\"\n  },\n  forever: {\n    animationIterationCount: \"infinite\"\n  },\n  strobe: {\n    animationDuration: \"1s\",\n    animationName: \"pulse\"\n  },\n  fastBlink: {\n    animationDuration: \"0.80s\",\n    animationName: \"blink\",\n    animationTimingFunction: \"step-start\"\n  },\n  slowBlink: {\n    animationDuration: \"2s\",\n    animationName: \"blink\",\n    animationTimingFunction: \"step-start\"\n  },\n  credits: {\n    display: \"flex\",\n    position: \"absolute\",\n    bottom: \"0\",\n    right: \"0\",\n    left: \"0\",\n    padding: \"15px\",\n    justifyContent: \"space-between\"\n  }\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: 1,\n      duration: 255,\n      level: 10,\n      effect: \"1\",\n      value: \"33488897\"\n    };\n    this.configValue = React.createRef();\n  }\n\n  setValue = key => (e, v) => {\n    this.setState({ [key]: key !== \"effect\" ? v : e.target.value }, () => {\n      this.setState(lastState => ({\n        value:\n          parseInt(lastState.color) +\n          lastState.level * 256 +\n          lastState.duration * 65536 +\n          lastState.effect * 16777216\n      }));\n    });\n  };\n\n  handleCopy = () => {\n    if (this.configValue.current) {\n      this.configValue.current.select();\n      document.execCommand(\"copy\");\n    }\n  };\n\n  durationFormater = val => {\n    switch (val) {\n      case 255:\n        return \"Forever\";\n      case 1:\n        return \"1 second\";\n      default:\n        if (val > 59) {\n          return `${Math.floor(val / 60)}${val % 60} seconds`;\n        } else {\n          return `${val} seconds`;\n        }\n    }\n  };\n\n  render() {\n    let effectCSS = \"\";\n    let effectStyles = {};\n    effectStyles[\"opacity\"] = this.state.level / 10;\n    switch (this.state.effect) {\n      case \"2\":\n        effectCSS += ` ${this.props.classes.fastBlink}`;\n        break;\n      case \"3\":\n        effectCSS += ` ${this.props.classes.slowBlink}`;\n        break;\n      case \"4\":\n        effectCSS += ` ${this.props.classes.strobe}`;\n        break;\n      default:\n        break;\n    }\n    switch (this.state.duration) {\n      default:\n        effectCSS += ` ${this.props.classes.forever}`;\n        break;\n    }\n\n    return (\n      <div className={this.props.classes.root}>\n        <Typography variant=\"h2\">Inovelli Notification Calculator</Typography>\n        <div className={this.props.classes.switchWrapper}>\n          <div className={this.props.classes.switchContainer}>\n            <img\n              alt=\"Inovelli-LZW30-SN\"\n              src={lzw30sn}\n              height=\"600px\"\n              width=\"400px\"\n            />\n            <span\n              id=\"notification-led\"\n              className={this.props.classes.notificationLED + effectCSS}\n              style={{\n                backgroundColor: LED_COLORS[parseInt(this.state.color)],\n                zIndex: \"2\",\n                ...effectStyles\n              }}\n            />\n            <span\n              id=\"notification-led\"\n              className={this.props.classes.notificationLED}\n            />\n          </div>\n          <div>\n            <Typography variant=\"h4\" gutterBottom>\n              Options\n            </Typography>\n            <Typography gutterBottom>Color</Typography>\n            <div className={this.props.classes.colorHelper} />\n            <Slider\n              defaultValue={1}\n              aria-labelledby=\"discrete-slider\"\n              valueLabelDisplay=\"auto\"\n              step={1}\n              min={1}\n              max={255}\n              value={this.state.color}\n              onChange={this.setValue(\"color\")}\n            />\n\n            <Typography gutterBottom>Brightness Level</Typography>\n            <Grid container spacing={2}>\n              <Grid item>\n                <Brightness0 />\n              </Grid>\n              <Grid item xs>\n                <Slider\n                  value={this.state.level}\n                  valueLabelDisplay=\"auto\"\n                  min={0}\n                  max={10}\n                  onChange={this.setValue(\"level\")}\n                />\n              </Grid>\n              <Grid item>\n                <Brightness7 />\n              </Grid>\n            </Grid>\n            <Typography gutterBottom>Duration</Typography>\n            <Grid container spacing={2}>\n              <Grid item>\n                <TimelapseIcon />\n              </Grid>\n              <Grid item xs>\n                <Slider\n                  value={this.state.duration}\n                  valueLabelDisplay=\"auto\"\n                  valueLabelFormat={this.durationFormater}\n                  marks={[5, 10, 15, 20, 30, 45, 60, 120, 180, 240, 255]}\n                  min={1}\n                  max={255}\n                  onChange={this.setValue(\"duration\")}\n                  ValueLabelComponent={ValueLabelComponent}\n                />\n              </Grid>\n              <Grid item>\n                <InfiniteIcon />\n              </Grid>\n            </Grid>\n            <FormControl fullWidth={true} margin=\"normal\">\n              <InputLabel>Effect</InputLabel>\n              <Select\n                value={this.state.effect}\n                onChange={this.setValue(\"effect\")}\n              >\n                {/* <MenuItem value=\"0\">Off</MenuItem> */}\n                <MenuItem value=\"1\">Solid</MenuItem>\n                <MenuItem value=\"2\">Strobe\\Fast Blink</MenuItem>\n                <MenuItem value=\"3\">Slow Blink</MenuItem>\n                <MenuItem value=\"4\">Pulse</MenuItem>\n              </Select>\n            </FormControl>\n            <TextField\n              style={{ marginTop: \"60px\" }}\n              value={this.state.value}\n              readOnly={true}\n              label=\"Configuration Value\"\n              fullWidth={true}\n              margin=\"normal\"\n              variant=\"outlined\"\n              inputRef={this.configValue}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <Tooltip title=\"Copy to Clipboard\">\n                      <IconButton edge=\"end\" onClick={this.handleCopy}>\n                        <SvgIcon>\n                          <svg viewBox=\"0 0 24 24\">\n                            <path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" />\n                          </svg>\n                        </SvgIcon>\n                      </IconButton>\n                    </Tooltip>\n                  </InputAdornment>\n                )\n              }}\n            />\n          </div>\n        </div>\n        <div className={this.props.classes.credits}>\n          <Typography>\n            <a href=\"https://www.inovelli.com/\">https://www.inovelli.com/</a>\n          </Typography>\n          <Typography variant=\"caption\">Tool By: @nathanfiscus</Typography>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}